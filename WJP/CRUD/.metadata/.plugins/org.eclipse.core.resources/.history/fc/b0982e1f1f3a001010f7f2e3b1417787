package com.library.dao;

import java.sql.*;
import java.util.*;
import com.library.model.Book;

public class BookDAO {
    private String jdbcURL = "jdbc:mysql://localhost:3306/librarydb";
    private String jdbcUsername = "root";
    private String jdbcPassword = "your_password";

    private static final String INSERT_BOOK_SQL = "INSERT INTO books VALUES (?, ?, ?, ?, ?)";
    private static final String SELECT_ALL_BOOKS = "SELECT * FROM books ORDER BY title";
    private static final String DELETE_BOOK_SQL = "DELETE FROM books WHERE book_id=?";
    private static final String UPDATE_BOOK_SQL = "UPDATE books SET title=?, author=?, genre=?, publication_year=? WHERE book_id=?";
    private static final String SELECT_BOOK_BY_ID = "SELECT * FROM books WHERE book_id=?";

    public void insertBook(Book book) throws SQLException {
        try (Connection con = DriverManager.getConnection(jdbcURL, jdbcUsername, jdbcPassword);
             PreparedStatement stmt = con.prepareStatement(INSERT_BOOK_SQL)) {
            stmt.setInt(1, book.getBookId());
            stmt.setString(2, book.getTitle());
            stmt.setString(3, book.getAuthor());
            stmt.setString(4, book.getGenre());
            stmt.setInt(5, book.getPublicationYear());
            stmt.executeUpdate();
        }
    }

    public List<Book> getAllBooks() throws SQLException {
        List<Book> books = new ArrayList<>();
        try (Connection con = DriverManager.getConnection(jdbcURL, jdbcUsername, jdbcPassword);
             PreparedStatement stmt = con.prepareStatement(SELECT_ALL_BOOKS)) {
            ResultSet rs = stmt.executeQuery();
            while (rs.next()) {
                Book book = new Book();
                book.setBookId(rs.getInt(1));
                book.setTitle(rs.getString(2));
                book.setAuthor(rs.getString(3));
                book.setGenre(rs.getString(4));
                book.setPublicationYear(rs.getInt(5));
                books.add(book);
            }
        }
        return books;
    }

    public void deleteBook(int id) throws SQLException {
        try (Connection con = DriverManager.getConnection(jdbcURL, jdbcUsername, jdbcPassword);
             PreparedStatement stmt = con.prepareStatement(DELETE_BOOK_SQL)) {
            stmt.setInt(1, id);
            stmt.executeUpdate();
        }
    }

    public Book getBookById(int id) throws SQLException {
        Book book = new Book();
        try (Connection con = DriverManager.getConnection(jdbcURL, jdbcUsername, jdbcPassword);
             PreparedStatement stmt = con.prepareStatement(SELECT_BOOK_BY_ID)) {
            stmt.setInt(1, id);
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                book.setBookId(rs.getInt(1));
                book.setTitle(rs.getString(2));
                book.setAuthor(rs.getString(3));
                book.setGenre(rs.getString(4));
                book.setPublicationYear(rs.getInt(5));
            }
        }
        return book;
    }

    public void updateBook(Book book) throws SQLException {
        try (Connection con = DriverManager.getConnection(jdbcURL, jdbcUsername, jdbcPassword);
             PreparedStatement stmt = con.prepareStatement(UPDATE_BOOK_SQL)) {
            stmt.setString(1, book.getTitle());
            stmt.setString(2, book.getAuthor());
            stmt.setString(3, book.getGenre());
            stmt.setInt(4, book.getPublicationYear());
            stmt.setInt(5, book.getBookId());
            stmt.executeUpdate();
        }
    }
}
